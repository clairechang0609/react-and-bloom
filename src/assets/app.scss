// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "bootstrap/scss/functions";

// 2. Include any default variable overrides here
$primary: #222;
$secondary: #47564a;
$tertiary: #cbc6a3;
$success: #42b983;
$danger: #e53e3e;
$light: #fbfcf8;
$dark: #757779;
$info: #308760;
$gray: #cccccc;
$light-gray: #e9e9e3;
$background: #dfdbcf;
$min-contrast-ratio: 3.5;
$pagination-focus-bg: rgba($secondary, 0.5);
$pagination-hover-bg: rgba($secondary, 0.5);
$pagination-active-bg: $secondary;
$pagination-disabled-bg: transparent;
$pagination-disabled-color: $light;
$border-color: rgba(0, 0, 0, 0.2);

:root {
  --primary: #222;
  --secondary: #47564a;
  --tertiary: #cbbca3;
  --success: #42b983;
  --danger: #e53e3e;
  --light: #fbfcf8;
  --dark: #757779;
  --info: #308760;
  --gray: #cccccc;
  --light-gray: #e9e9e3;
  --background: #dfdbcf;
  --bg-success: rgba(66, 185, 131, 0.1);
  --bg-danger: rgba(229, 62, 62, 0.1);
  --hover-bg-success: rgba(66, 185, 131, 0.2);
  --hover-bg-danger: rgba(229, 62, 62, 0.2);

  // configure the z-index of the editor, so when inside a bootstrap modal, it will be rendered over the modal.
  --ck-z-default: 100 !important;
  --ck-z-modal: calc( var(--ck-z-default) + 2000 ) !important;
}

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "bootstrap/scss/utilities";
@import "bootstrap/scss/reboot";
@import "bootstrap/scss/type";
@import "bootstrap/scss/images";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/button-group";
@import "bootstrap/scss/badge";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/list-group";
@import "bootstrap/scss/carousel";
@import "bootstrap/scss/card";
@import "bootstrap/scss/containers";
@import "bootstrap/scss/pagination";
@import "bootstrap/scss/grid";
@import "bootstrap/scss/toasts";
@import "bootstrap/scss/modal";
@import "bootstrap/scss/close";
@import "bootstrap/scss/spinners";
@import "bootstrap/scss/transitions";
@import "bootstrap/scss/helpers";

$all-colors: (
  "tertiary": $tertiary,
  "gray": $gray,
  "light-gray": $light-gray,
  "background": $background
);

$utilities: map-merge(
  $utilities,
  (
    "color": map-merge(
      map-get($utilities, "color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "color"), "values"),
          (
            $all-colors
          )
        )
      )
    )
  )
);

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "bootstrap/scss/utilities/api";

// 8. Add additional custom code here
.container {
  max-width: 1000px;
  padding-top: env(safe-area-inset-top);
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: max(env(safe-area-inset-left), 0.75rem);
  padding-right: max(env(safe-area-inset-right), 0.75rem);
}
.page-link {
  cursor: pointer;
}
.page-link-prev, .page-link-next {
  background-color: transparent !important;
}
.cursor-pointer {
  cursor: pointer;
}
.cursor-default {
  cursor: default;
}
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
/* Firefox */
input[type=number] {
  appearance: textfield;
}
a {
  text-decoration: none;
}
.form-label {
  font-size: 0.875rem;
}
.title {
  font-family: 'Cormorant Garamond', Didot, 'Bodoni MT', 'Noto Serif Display', 'URW Palladio L', P052, Sylfaen, serif;
}

/*! locomotive-scroll v4.1.3 | MIT License | https://github.com/locomotivemtl/locomotive-scroll */
html.has-scroll-smooth {
  overflow: hidden;
}
html.has-scroll-dragging {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.has-scroll-smooth body {
  overflow: hidden;
}
.has-scroll-smooth [data-scroll-container] {
  min-height: 100vh;
}
[data-scroll-direction="horizontal"] [data-scroll-container] {
  height: 100vh;
  display: inline-block;
  white-space: nowrap;
}
[data-scroll-direction="horizontal"] [data-scroll-section] {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  height: 100%;
}
.c-scrollbar {
  position: absolute;
  right: 0;
  top: 0;
  width: 11px;
  height: 100%;
  transform-origin: center right;
  transition: transform 0.3s, opacity 0.3s;
  opacity: 0;
  z-index: 10000;
}
.c-scrollbar:hover {
  transform: scaleX(1.45);
}
.c-scrollbar:hover, .has-scroll-scrolling .c-scrollbar, .has-scroll-dragging .c-scrollbar {
  opacity: 1;
}
[data-scroll-direction="horizontal"] .c-scrollbar {
  width: 100%;
  height: 10px;
  top: auto;
  bottom: 0;
  transform: scaleY(1);
}
[data-scroll-direction="horizontal"] .c-scrollbar:hover {
  transform: scaleY(1.3);
}
.c-scrollbar_thumb {
  position: absolute;
  top: 0;
  right: 0;
  background-color: black;
  opacity: 0.5;
  width: 7px;
  border-radius: 10px;
  margin: 2px;
  cursor: -webkit-grab;
  cursor: grab;
}
.has-scroll-dragging .c-scrollbar_thumb {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}
[data-scroll-direction="horizontal"] .c-scrollbar_thumb {
  right: auto;
  bottom: 0;
}

.btn-arrow {
  right: 1.5rem;
  transition: 0.25s ease-in;
}
.btn:hover .btn-arrow {
  right: 0.75rem;
}

.page-link.disabled, .disabled > .page-link {
  color: rgba(0,0,0,0.3);
}

.form-floating .form-control {
  box-shadow: none !important;
}
.form-floating > label {
  padding-left: 0 !important;
  padding-right: 0 !important;
  color: rgba(0,0,0,0.5);
}
.form-floating > .form-control:focus ~ label {
  color: rgba(0,0,0,0.5);
}
.form-floating > label::after {
  display: none !important;
}

.outline-0 {
  outline: none !important;
}

.fs-sm {
  font-size: 0.875rem;
}
.fs-tiny {
  font-size: 0.75rem;
}

.text-ellipsis {
  word-break: break-word;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
  line-clamp: 3;
  box-sizing: border-box;
}

$grid-breakpoint-map: (
	sm: 576px,
	md: 768px,
	lg: 992px,
	xl: 1200px,
	xxl: 1440px,
);

@for $i from 10 through 100 {
  @if $i % 10 == 0 {
    .w-#{$i} {
      width: $i * 1%;
    }
  }
}

@each $bp, $size in $grid-breakpoint-map {
  @media (min-width: $size) {
    @for $i from 10 through 100 {
      @if $i % 10 == 0 {
        .w-#{$bp}-#{$i} {
          width: $i * 1%;
        }
      }
    }
  }
}

// CKEditor
.editor-container_classic-editor .editor-container__editor {
	width: 100%;
}
.ck-content {
  min-height: 300px;
}
.ck-body-wrapper{
  z-index: 10000;
}
